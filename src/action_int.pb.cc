// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "action_int.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_action_5fint_2eproto() {
  protobuf_AddDesc_action_5fint_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "action_int.proto");
  GOOGLE_CHECK(file != NULL);
  Action_descriptor_ = file->message_type(0);
  static const int Action_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_action_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, substantiated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, backend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, read_only_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, readset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, writeset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, disallow_lazy_scheduling_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, closure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, exec_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, delayed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, read_deps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, write_deps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, dependents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, num_dependencies_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, materialize_),
  };
  Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Action));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_action_5fint_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Action_descriptor_, &Action::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_action_5fint_2eproto() {
  delete Action::default_instance_;
  delete Action_reflection_;
}

void protobuf_AddDesc_action_5fint_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020action_int.proto\"\337\003\n\006Action\022\016\n\006client\030"
    "\001 \001(\t\022\030\n\020client_action_id\030\002 \001(\t\022\025\n\rsubst"
    "antiated\030\003 \001(\010\022\017\n\007backend\030\013 \001(\t\022\023\n\013actio"
    "n_type\030\014 \001(\t\022\030\n\tread_only\030\r \001(\010:\005false\022\r"
    "\n\005input\030\016 \001(\014\022\016\n\006output\030\017 \001(\014\022\017\n\007readset"
    "\030\025 \003(\005\022\020\n\010writeset\030\026 \003(\005\022\017\n\007version\030\037 \001("
    "\004\022\'\n\030disallow_lazy_scheduling\030) \001(\010:\005fal"
    "se\022\r\n\005state\030* \001(\005\022\017\n\007closure\030+ \001(\004\022\022\n\nst"
    "art_time\030, \001(\004\022\027\n\017exec_start_time\030- \001(\004\022"
    "\020\n\010end_time\030. \001(\004\022\017\n\007delayed\030/ \001(\010\022\021\n\tre"
    "ad_deps\0303 \003(\004\022\022\n\nwrite_deps\0304 \003(\004\022\022\n\ndep"
    "endents\0305 \003(\004\022\030\n\020num_dependencies\0306 \001(\005\022"
    "\023\n\013materialize\0307 \001(\010", 500);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "action_int.proto", &protobuf_RegisterTypes);
  Action::default_instance_ = new Action();
  Action::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_action_5fint_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_action_5fint_2eproto {
  StaticDescriptorInitializer_action_5fint_2eproto() {
    protobuf_AddDesc_action_5fint_2eproto();
  }
} static_descriptor_initializer_action_5fint_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Action::kClientFieldNumber;
const int Action::kClientActionIdFieldNumber;
const int Action::kSubstantiatedFieldNumber;
const int Action::kBackendFieldNumber;
const int Action::kActionTypeFieldNumber;
const int Action::kReadOnlyFieldNumber;
const int Action::kInputFieldNumber;
const int Action::kOutputFieldNumber;
const int Action::kReadsetFieldNumber;
const int Action::kWritesetFieldNumber;
const int Action::kVersionFieldNumber;
const int Action::kDisallowLazySchedulingFieldNumber;
const int Action::kStateFieldNumber;
const int Action::kClosureFieldNumber;
const int Action::kStartTimeFieldNumber;
const int Action::kExecStartTimeFieldNumber;
const int Action::kEndTimeFieldNumber;
const int Action::kDelayedFieldNumber;
const int Action::kReadDepsFieldNumber;
const int Action::kWriteDepsFieldNumber;
const int Action::kDependentsFieldNumber;
const int Action::kNumDependenciesFieldNumber;
const int Action::kMaterializeFieldNumber;
#endif  // !_MSC_VER

Action::Action()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Action::InitAsDefaultInstance() {
}

Action::Action(const Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  client_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  client_action_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  substantiated_ = false;
  backend_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  action_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  read_only_ = false;
  input_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  output_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = GOOGLE_ULONGLONG(0);
  disallow_lazy_scheduling_ = false;
  state_ = 0;
  closure_ = GOOGLE_ULONGLONG(0);
  start_time_ = GOOGLE_ULONGLONG(0);
  exec_start_time_ = GOOGLE_ULONGLONG(0);
  end_time_ = GOOGLE_ULONGLONG(0);
  delayed_ = false;
  num_dependencies_ = 0;
  materialize_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  SharedDtor();
}

void Action::SharedDtor() {
  if (client_ != &::google::protobuf::internal::kEmptyString) {
    delete client_;
  }
  if (client_action_id_ != &::google::protobuf::internal::kEmptyString) {
    delete client_action_id_;
  }
  if (backend_ != &::google::protobuf::internal::kEmptyString) {
    delete backend_;
  }
  if (action_type_ != &::google::protobuf::internal::kEmptyString) {
    delete action_type_;
  }
  if (input_ != &::google::protobuf::internal::kEmptyString) {
    delete input_;
  }
  if (output_ != &::google::protobuf::internal::kEmptyString) {
    delete output_;
  }
  if (this != default_instance_) {
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_action_5fint_2eproto();  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New() const {
  return new Action;
}

void Action::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_client()) {
      if (client_ != &::google::protobuf::internal::kEmptyString) {
        client_->clear();
      }
    }
    if (has_client_action_id()) {
      if (client_action_id_ != &::google::protobuf::internal::kEmptyString) {
        client_action_id_->clear();
      }
    }
    substantiated_ = false;
    if (has_backend()) {
      if (backend_ != &::google::protobuf::internal::kEmptyString) {
        backend_->clear();
      }
    }
    if (has_action_type()) {
      if (action_type_ != &::google::protobuf::internal::kEmptyString) {
        action_type_->clear();
      }
    }
    read_only_ = false;
    if (has_input()) {
      if (input_ != &::google::protobuf::internal::kEmptyString) {
        input_->clear();
      }
    }
    if (has_output()) {
      if (output_ != &::google::protobuf::internal::kEmptyString) {
        output_->clear();
      }
    }
  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    version_ = GOOGLE_ULONGLONG(0);
    disallow_lazy_scheduling_ = false;
    state_ = 0;
    closure_ = GOOGLE_ULONGLONG(0);
    start_time_ = GOOGLE_ULONGLONG(0);
    exec_start_time_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    end_time_ = GOOGLE_ULONGLONG(0);
    delayed_ = false;
    num_dependencies_ = 0;
    materialize_ = false;
  }
  readset_.Clear();
  writeset_.Clear();
  read_deps_.Clear();
  write_deps_.Clear();
  dependents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string client = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->client().data(), this->client().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_client_action_id;
        break;
      }
      
      // optional string client_action_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_client_action_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_action_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->client_action_id().data(), this->client_action_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_substantiated;
        break;
      }
      
      // optional bool substantiated = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_substantiated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &substantiated_)));
          set_has_substantiated();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_backend;
        break;
      }
      
      // optional string backend = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_backend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_backend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->backend().data(), this->backend().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_action_type;
        break;
      }
      
      // optional string action_type = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_action_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->action_type().data(), this->action_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_read_only;
        break;
      }
      
      // optional bool read_only = 13 [default = false];
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_read_only:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_only_)));
          set_has_read_only();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_input;
        break;
      }
      
      // optional bytes input = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_output;
        break;
      }
      
      // optional bytes output = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_readset;
        break;
      }
      
      // repeated int32 readset = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_readset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 168, input, this->mutable_readset())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_readset())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_readset;
        if (input->ExpectTag(176)) goto parse_writeset;
        break;
      }
      
      // repeated int32 writeset = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_writeset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 176, input, this->mutable_writeset())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_writeset())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_writeset;
        if (input->ExpectTag(248)) goto parse_version;
        break;
      }
      
      // optional uint64 version = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_disallow_lazy_scheduling;
        break;
      }
      
      // optional bool disallow_lazy_scheduling = 41 [default = false];
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_disallow_lazy_scheduling:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disallow_lazy_scheduling_)));
          set_has_disallow_lazy_scheduling();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_state;
        break;
      }
      
      // optional int32 state = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(344)) goto parse_closure;
        break;
      }
      
      // optional uint64 closure = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_closure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &closure_)));
          set_has_closure();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(352)) goto parse_start_time;
        break;
      }
      
      // optional uint64 start_time = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(360)) goto parse_exec_start_time;
        break;
      }
      
      // optional uint64 exec_start_time = 45;
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exec_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &exec_start_time_)));
          set_has_exec_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(368)) goto parse_end_time;
        break;
      }
      
      // optional uint64 end_time = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_delayed;
        break;
      }
      
      // optional bool delayed = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_delayed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delayed_)));
          set_has_delayed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_read_deps;
        break;
      }
      
      // repeated uint64 read_deps = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_read_deps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 408, input, this->mutable_read_deps())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_read_deps())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_read_deps;
        if (input->ExpectTag(416)) goto parse_write_deps;
        break;
      }
      
      // repeated uint64 write_deps = 52;
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_write_deps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 416, input, this->mutable_write_deps())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_write_deps())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(416)) goto parse_write_deps;
        if (input->ExpectTag(424)) goto parse_dependents;
        break;
      }
      
      // repeated uint64 dependents = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dependents:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 424, input, this->mutable_dependents())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dependents())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(424)) goto parse_dependents;
        if (input->ExpectTag(432)) goto parse_num_dependencies;
        break;
      }
      
      // optional int32 num_dependencies = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num_dependencies:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_dependencies_)));
          set_has_num_dependencies();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(440)) goto parse_materialize;
        break;
      }
      
      // optional bool materialize = 55;
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_materialize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &materialize_)));
          set_has_materialize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string client = 1;
  if (has_client()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->client().data(), this->client().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->client(), output);
  }
  
  // optional string client_action_id = 2;
  if (has_client_action_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->client_action_id().data(), this->client_action_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->client_action_id(), output);
  }
  
  // optional bool substantiated = 3;
  if (has_substantiated()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->substantiated(), output);
  }
  
  // optional string backend = 11;
  if (has_backend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->backend().data(), this->backend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->backend(), output);
  }
  
  // optional string action_type = 12;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->action_type().data(), this->action_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->action_type(), output);
  }
  
  // optional bool read_only = 13 [default = false];
  if (has_read_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->read_only(), output);
  }
  
  // optional bytes input = 14;
  if (has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      14, this->input(), output);
  }
  
  // optional bytes output = 15;
  if (has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      15, this->output(), output);
  }
  
  // repeated int32 readset = 21;
  for (int i = 0; i < this->readset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      21, this->readset(i), output);
  }
  
  // repeated int32 writeset = 22;
  for (int i = 0; i < this->writeset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      22, this->writeset(i), output);
  }
  
  // optional uint64 version = 31;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->version(), output);
  }
  
  // optional bool disallow_lazy_scheduling = 41 [default = false];
  if (has_disallow_lazy_scheduling()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(41, this->disallow_lazy_scheduling(), output);
  }
  
  // optional int32 state = 42;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(42, this->state(), output);
  }
  
  // optional uint64 closure = 43;
  if (has_closure()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(43, this->closure(), output);
  }
  
  // optional uint64 start_time = 44;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(44, this->start_time(), output);
  }
  
  // optional uint64 exec_start_time = 45;
  if (has_exec_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(45, this->exec_start_time(), output);
  }
  
  // optional uint64 end_time = 46;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(46, this->end_time(), output);
  }
  
  // optional bool delayed = 47;
  if (has_delayed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->delayed(), output);
  }
  
  // repeated uint64 read_deps = 51;
  for (int i = 0; i < this->read_deps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      51, this->read_deps(i), output);
  }
  
  // repeated uint64 write_deps = 52;
  for (int i = 0; i < this->write_deps_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      52, this->write_deps(i), output);
  }
  
  // repeated uint64 dependents = 53;
  for (int i = 0; i < this->dependents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      53, this->dependents(i), output);
  }
  
  // optional int32 num_dependencies = 54;
  if (has_num_dependencies()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(54, this->num_dependencies(), output);
  }
  
  // optional bool materialize = 55;
  if (has_materialize()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(55, this->materialize(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string client = 1;
  if (has_client()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->client().data(), this->client().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->client(), target);
  }
  
  // optional string client_action_id = 2;
  if (has_client_action_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->client_action_id().data(), this->client_action_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_action_id(), target);
  }
  
  // optional bool substantiated = 3;
  if (has_substantiated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->substantiated(), target);
  }
  
  // optional string backend = 11;
  if (has_backend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->backend().data(), this->backend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->backend(), target);
  }
  
  // optional string action_type = 12;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->action_type().data(), this->action_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->action_type(), target);
  }
  
  // optional bool read_only = 13 [default = false];
  if (has_read_only()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->read_only(), target);
  }
  
  // optional bytes input = 14;
  if (has_input()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->input(), target);
  }
  
  // optional bytes output = 15;
  if (has_output()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->output(), target);
  }
  
  // repeated int32 readset = 21;
  for (int i = 0; i < this->readset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(21, this->readset(i), target);
  }
  
  // repeated int32 writeset = 22;
  for (int i = 0; i < this->writeset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(22, this->writeset(i), target);
  }
  
  // optional uint64 version = 31;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->version(), target);
  }
  
  // optional bool disallow_lazy_scheduling = 41 [default = false];
  if (has_disallow_lazy_scheduling()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(41, this->disallow_lazy_scheduling(), target);
  }
  
  // optional int32 state = 42;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(42, this->state(), target);
  }
  
  // optional uint64 closure = 43;
  if (has_closure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(43, this->closure(), target);
  }
  
  // optional uint64 start_time = 44;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(44, this->start_time(), target);
  }
  
  // optional uint64 exec_start_time = 45;
  if (has_exec_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(45, this->exec_start_time(), target);
  }
  
  // optional uint64 end_time = 46;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(46, this->end_time(), target);
  }
  
  // optional bool delayed = 47;
  if (has_delayed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->delayed(), target);
  }
  
  // repeated uint64 read_deps = 51;
  for (int i = 0; i < this->read_deps_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(51, this->read_deps(i), target);
  }
  
  // repeated uint64 write_deps = 52;
  for (int i = 0; i < this->write_deps_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(52, this->write_deps(i), target);
  }
  
  // repeated uint64 dependents = 53;
  for (int i = 0; i < this->dependents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(53, this->dependents(i), target);
  }
  
  // optional int32 num_dependencies = 54;
  if (has_num_dependencies()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(54, this->num_dependencies(), target);
  }
  
  // optional bool materialize = 55;
  if (has_materialize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(55, this->materialize(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Action::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string client = 1;
    if (has_client()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client());
    }
    
    // optional string client_action_id = 2;
    if (has_client_action_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_action_id());
    }
    
    // optional bool substantiated = 3;
    if (has_substantiated()) {
      total_size += 1 + 1;
    }
    
    // optional string backend = 11;
    if (has_backend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->backend());
    }
    
    // optional string action_type = 12;
    if (has_action_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->action_type());
    }
    
    // optional bool read_only = 13 [default = false];
    if (has_read_only()) {
      total_size += 1 + 1;
    }
    
    // optional bytes input = 14;
    if (has_input()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->input());
    }
    
    // optional bytes output = 15;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output());
    }
    
  }
  if (_has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    // optional uint64 version = 31;
    if (has_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version());
    }
    
    // optional bool disallow_lazy_scheduling = 41 [default = false];
    if (has_disallow_lazy_scheduling()) {
      total_size += 2 + 1;
    }
    
    // optional int32 state = 42;
    if (has_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional uint64 closure = 43;
    if (has_closure()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->closure());
    }
    
    // optional uint64 start_time = 44;
    if (has_start_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_time());
    }
    
    // optional uint64 exec_start_time = 45;
    if (has_exec_start_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->exec_start_time());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint64 end_time = 46;
    if (has_end_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->end_time());
    }
    
    // optional bool delayed = 47;
    if (has_delayed()) {
      total_size += 2 + 1;
    }
    
    // optional int32 num_dependencies = 54;
    if (has_num_dependencies()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num_dependencies());
    }
    
    // optional bool materialize = 55;
    if (has_materialize()) {
      total_size += 2 + 1;
    }
    
  }
  // repeated int32 readset = 21;
  {
    int data_size = 0;
    for (int i = 0; i < this->readset_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->readset(i));
    }
    total_size += 2 * this->readset_size() + data_size;
  }
  
  // repeated int32 writeset = 22;
  {
    int data_size = 0;
    for (int i = 0; i < this->writeset_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->writeset(i));
    }
    total_size += 2 * this->writeset_size() + data_size;
  }
  
  // repeated uint64 read_deps = 51;
  {
    int data_size = 0;
    for (int i = 0; i < this->read_deps_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->read_deps(i));
    }
    total_size += 2 * this->read_deps_size() + data_size;
  }
  
  // repeated uint64 write_deps = 52;
  {
    int data_size = 0;
    for (int i = 0; i < this->write_deps_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->write_deps(i));
    }
    total_size += 2 * this->write_deps_size() + data_size;
  }
  
  // repeated uint64 dependents = 53;
  {
    int data_size = 0;
    for (int i = 0; i < this->dependents_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->dependents(i));
    }
    total_size += 2 * this->dependents_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  readset_.MergeFrom(from.readset_);
  writeset_.MergeFrom(from.writeset_);
  read_deps_.MergeFrom(from.read_deps_);
  write_deps_.MergeFrom(from.write_deps_);
  dependents_.MergeFrom(from.dependents_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client()) {
      set_client(from.client());
    }
    if (from.has_client_action_id()) {
      set_client_action_id(from.client_action_id());
    }
    if (from.has_substantiated()) {
      set_substantiated(from.substantiated());
    }
    if (from.has_backend()) {
      set_backend(from.backend());
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_read_only()) {
      set_read_only(from.read_only());
    }
    if (from.has_input()) {
      set_input(from.input());
    }
    if (from.has_output()) {
      set_output(from.output());
    }
  }
  if (from._has_bits_[10 / 32] & (0xffu << (10 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_disallow_lazy_scheduling()) {
      set_disallow_lazy_scheduling(from.disallow_lazy_scheduling());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_closure()) {
      set_closure(from.closure());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_exec_start_time()) {
      set_exec_start_time(from.exec_start_time());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_delayed()) {
      set_delayed(from.delayed());
    }
    if (from.has_num_dependencies()) {
      set_num_dependencies(from.num_dependencies());
    }
    if (from.has_materialize()) {
      set_materialize(from.materialize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  
  return true;
}

void Action::Swap(Action* other) {
  if (other != this) {
    std::swap(client_, other->client_);
    std::swap(client_action_id_, other->client_action_id_);
    std::swap(substantiated_, other->substantiated_);
    std::swap(backend_, other->backend_);
    std::swap(action_type_, other->action_type_);
    std::swap(read_only_, other->read_only_);
    std::swap(input_, other->input_);
    std::swap(output_, other->output_);
    readset_.Swap(&other->readset_);
    writeset_.Swap(&other->writeset_);
    std::swap(version_, other->version_);
    std::swap(disallow_lazy_scheduling_, other->disallow_lazy_scheduling_);
    std::swap(state_, other->state_);
    std::swap(closure_, other->closure_);
    std::swap(start_time_, other->start_time_);
    std::swap(exec_start_time_, other->exec_start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(delayed_, other->delayed_);
    read_deps_.Swap(&other->read_deps_);
    write_deps_.Swap(&other->write_deps_);
    dependents_.Swap(&other->dependents_);
    std::swap(num_dependencies_, other->num_dependencies_);
    std::swap(materialize_, other->materialize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
